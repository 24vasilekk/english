version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: english_bot
      POSTGRES_USER: english_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  bot:
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=postgresql://english_user:${DB_PASSWORD}@postgres:5432/english_bot
      - REDIS_URL=redis://redis:6379/0
      - PAYMENT_TOKEN=${PAYMENT_TOKEN}
      - DEBUG=False
    volumes:
      - ./logs:/app/logs
      - ./audio_cache:/app/audio_cache
    restart: unless-stopped
    networks:
      - app-network

  scheduler:
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=postgresql://english_user:${DB_PASSWORD}@postgres:5432/english_bot
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
    command: python -m schedulers.daily_tasks
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - bot
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge